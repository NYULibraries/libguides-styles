@use 'colors' as *;

@mixin focusOutline{
  -webkit-box-shadow: inset 0 0 0 2px $border_focus;
  box-shadow: inset 0 0 0 2px $border_focus !important;
  outline: none;
}

@mixin antialias{
  -webkit-font-smoothing: antialiased;
}

@mixin appearance($arguments) {
  @include prefix-property(appearance, unquote($arguments), true, true, false, false);
}

@mixin prefix-property($property, $value, $supportWebkit: $defaultWebkitSupport, $supportFirefox: $defaultFirefoxSupport, $supportExplorer: $defaultExplorerSupport, $supportOpera: $defaultOperaSupport) {

  @if $supportWebkit   { -webkit-#{$property}: $value; }
  @if $supportFirefox  {    -moz-#{$property}: $value; }
  @if $supportExplorer {     -ms-#{$property}: $value; }
  @if $supportOpera    {      -o-#{$property}: $value; }

  #{$property}: $value;
}

@mixin clearfix {
  zoom: 1;
  &:before, &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}


// ****************************************************************
// * RESPONSIVE MIXINS
// ****************************************************************
@mixin respond-to($media) {
  @media only screen and ($media) { @content; }
 }
 
 @mixin min-width($media) {
  @media only screen and (min-width: $media) { @content; }
 }
 
 @mixin max-width($media) {
  @media only screen and (max-width: $media) { @content; }
 }
 
 @mixin max-height($media) {
  @media only screen and (max-height: $media) { @content; }
 }
 
 @mixin min-height($media) {
  @media only screen and (min-height: $media) { @content; }
 }